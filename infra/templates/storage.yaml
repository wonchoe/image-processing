AWSTemplateFormatVersion: '2010-09-09'
Description: Storage, Params, Secrets, SQS, EventBridge для image-processing

Resources:
  StorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      VersioningConfiguration:
        Status: Enabled
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true

  StorageBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StorageBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowPublicRead
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub "${StorageBucket.Arn}/*"

  StorageBucketParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /image-processing/storage-bucket
      Type: String
      Value: !Ref StorageBucket

  SSMConfigParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /image-processing/config
      Type: String
      Value: "default-value"

  Secret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: /image-processing/db-secret
      Description: "Credentials for Aurora"
      GenerateSecretString:
        SecretStringTemplate: '{"username": "masteruser"}'
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludeCharacters: '"@/\\'

  SecretParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /image-processing/secret-arn
      Type: String
      Value: !Ref Secret

  MainQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${AWS::StackName}-main-queue'

  MainQueueParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /image-processing/main-queue-url
      Type: String
      Value: !Ref MainQueue

  MainQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues: [ !Ref MainQueue ]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: "sqs:SendMessage"
            Resource: !GetAtt MainQueue.Arn

  AppEventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: !Sub '${AWS::StackName}-event-bus'

  AppEventBusParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /image-processing/event-bus
      Type: String
      Value: !Ref AppEventBus

  S3ToSQSRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub '${AWS::StackName}-s3-to-sqs-rule'
      EventBusName: !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:event-bus/default
      EventPattern:
        source:
          - "aws.s3"
        detail-type:
          - "Object Created"
        resources:
          - !GetAtt StorageBucket.Arn
        detail:
          object:
            key:
              - { "prefix": "input/" }
      Targets:
        - Arn: !GetAtt MainQueue.Arn
          Id: "MainQueueTarget"


Outputs:
  DefaultBusArn:
    Value: !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:event-bus/default
  StorageBucketName:
    Value: !Ref StorageBucket
  SSMConfigParam:
    Value: !Ref SSMConfigParam
  SecretArn:
    Value: !Ref Secret
    Export:
      Name: !Sub "${AWS::StackName}-SecretArn"
  MainQueueArn:
    Value: !GetAtt MainQueue.Arn
    Export:
      Name: ImageProcessingQueueArn
  AppEventBusName:
    Value: !Ref AppEventBus
